" Strings
" =======
echo "omg"
" Escapes:
echo '''''\\\\'

" Include/Source/Import
" =====================
riml_include 'included.riml'
riml_source 'sourced.riml'
riml_import 'Hey'
riml_import s:ClassName
riml_import g:ClassName
riml_import ClassName

" class names start with [A-Z_]
" =============================

" Match:
class Omg
end
class g:Omg
end
class s:Omg
end
class _Omg
end
class Omg < Base
end

" Nomatch:
class omg
end
class 0Omg
end

for i in n:omg
end

"  omgomg cool
echo "omg \#{omg} person\"other\"\\\\"

" Heredocs
" ========

" Interpolation:
let a = <<EOS
hey there #{omg}
OMGOMG
EOS

" Boolean
" =======
" Match:
t = true
f = false
" Nomatch:
t = a.true " should not be highlighted
f = b.true " should not be highlighted

let a:l = {}
l.return = {omg: 'true', another: 'false'}
call abs(1,2.41)
call call('omg')
let l = function('omg')

defm! hello()
end

function! hello(a, b, c) range
  if a:omg
  end
end

defm! omg()
end
:exec "omg" . "omg"

" Comments
" ========
":exec "omgomg" . "omg" . "omg" "omg"
" omgomgmog"
" Title: hello "

" Line Continuations
" ==================
echo " hello " .
\ "hey"
